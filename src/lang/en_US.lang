lang.id=en_US
lang.text=English (US)

frame.title=SnowHex hexadecimal editor
frame.title.file=%s - SnowHex
frame.empty=No open file
frame.preview=Preview
frame.preview.null=An error occurred:
frame.properties=Properties
frame.find=Find
frame.overwrite=Overwrite
frame.insert=Insert
frame.caret.pos=Address: %#x
frame.caret.selection=Selection: %#x - %#x (%d bytes)

button.create=Create
button.new=+ New
button.edit=Edit
button.cancel=Cancel

menu.file=File
menu.file.new=New
menu.file.open=Open
menu.file.save=Save

menu.edit=Edit
menu.edit.undo=Undo
menu.edit.redo=Redo
menu.edit.cut=Cut
menu.edit.copy=Copy
menu.edit.paste=Paste
menu.edit.delByte=Delete Byte
menu.edit.delBytes=Delete Selected Bytes
menu.edit.selectAll=Select All

menu.view=View
menu.view.coloring=Highlighting
menu.view.lang=Language
menu.view.showDump=Show Dump
menu.view.showResult=Show Preview
menu.view.showProps=Show Properties

parser.none=No highlighting
parser.multipleNotices=Multiple notices:
parser.commonNotice.signature=The file header (%s) is missing
parser.commonNotice.ioob=The end of the file is missing

parser.sni=Snow Image (SNI)
parser.sni.meta=Metadata:
parser.sni.meta.alpha.true=<span style="color: green">✓</span> With transparency
parser.sni.meta.alpha.false=<span style="color: red">✗</span> Without transparency
parser.sni.meta.grayscaled.true=<span style="color: gray">Grayscaled</span>
parser.sni.meta.grayscaled.false=<span style="color: green">Colored</span>
parser.sni.meta.cpalette.true=<span style="color: green">✓</span> With compressed palette
parser.sni.meta.palette.true=<span style="color: blue">✓</span> With palette
parser.sni.meta.palette.false=<span style="color: red">✗</span> Without palette
parser.sni.meta.clip.true=<span style="color: green">✓</span> With special shape
parser.sni.meta.clip.false=<span style="color: red">✗</span> Without special shape
parser.sni.size=Size: %d×%d
parser.sni.palette.size=Palette size: %d
parser.sni.color=Color: <span style="color: #%s;">■</span> %s
parser.sni.clipSize=The shift is too high, it goes outside of the image.
parser.sni.clip=The data is shifted of %dpx, its length is %dpx.
parser.sni.dead=The image end has been reached
parser.sni.palette.ioob=The palette is smaller than %d.

parser.gif=Graphics Interchange Format (GIF)
parser.gif.pos=Position: %d, %d
parser.gif.size=Size: %d×%d
parser.gif.charSize=Character size: %d×%d
parser.gif.globalColorTable.true=<span style="color: green">✓</span> With global color table (GCT)
parser.gif.globalColorTable.false=<span style="color: red">✗</span> Without global color table (GCT)
parser.gif.localColorTable.true=<span style="color: green">✓</span> With local color table (LCT)
parser.gif.localColorTable.false=<span style="color: red">✗</span> Without local color table (LCT)
parser.gif.sort.true=<span style="color: green">✓</span> Sorted color table
parser.gif.sort.false=<span style="color: red">✗</span> Unsorted color table
parser.gif.colorRes=Color resolution: %d
parser.gif.gctSize=GCT size: %d
parser.gif.lctSize=LCT size: %d
parser.gif.bci=Position of the background in the palette: %d (<span style="color: #%2$s;">■</span> %2$s)
parser.gif.par.false=<span style="color: red">✗</span> No given pixel aspect ratio
parser.gif.par=Pixel aspect ratio: %d:%d
parser.gif.color=Color: <span style="color: #%1$s;">■</span> %1$s
parser.gif.block.length=Block size: %d bytes
parser.gif.block.noterminator=Block end must be '00'
parser.gif.block.unknown=Unknown block
parser.gif.block.img=Sub-image
parser.gif.ext.header=GIF Extension: '%s'
parser.gif.ext.gce.disposal.0=No required disposal
parser.gif.ext.gce.disposal.1=No disposal
parser.gif.ext.gce.disposal.2=Reset to background color
parser.gif.ext.gce.disposal.3=Reset to previous graphics
parser.gif.ext.gce.userInput.true=<span style="color: green">✓</span> Wait for user input
parser.gif.ext.gce.userInput.false=<span style="color: red">✗</span> Don't wait for user input
parser.gif.ext.gce.transparentColor.true=<span style="color: green">✓</span> Active transparent pixel
parser.gif.ext.gce.transparentColor.false=<span style="color: red">✗</span> Inactive transparent pixel
parser.gif.ext.gce.transparentColor=The transparent pixel is #%d
parser.gif.ext.gce.delay=Wait after the generation of the next image: %.2f seconds
parser.gif.ext.app=Application '%s'
parser.gif.ext.app.version=Version '%s'
parser.gif.ext.text.fore=Position of the foreground in the palette: %d
parser.gif.ext.text.back=Position of the background in the palette: %d
parser.gif.interlace.true=<span style="color: green">✓</span> Interlaced
parser.gif.interlace.false=<span style="color: red">✗</span> Not interlaced

parser.png=Portable Network Graphics (PNG)
parser.png.ioob=The IEND chunk is missing
parser.png.invalidCrc=The CRC32 chunk checksum is incorrect
parser.png.invalidCrc.fix=Fix checksum and confirm data
parser.png.decompress=Show decompressed data
parser.png.chunk=%s chunk (%s, %s, %s)
parser.png.chunk.critical=Critical
parser.png.chunk.ancillary=Ancillary
parser.png.chunk.public=public
parser.png.chunk.private=private
parser.png.chunk.unsafe=unsafe to copy
parser.png.chunk.safe=safe to copy
parser.png.size=Size: %d×%d
parser.png.bitDepth=Bit Depth: %d
parser.png.colorType=Color Type: %s
parser.png.colorType.0=Grayscale
parser.png.colorType.2=RGB
parser.png.colorType.3=Palette
parser.png.colorType.4=Grayscale with alpha
parser.png.colorType.6=RGB with alpha
parser.png.colorType.error=Unknown value
parser.png.compression.0=Compression: Deflate
parser.png.compression.error=Compression: Unknown method
parser.png.filter.0=Filter method: Adaptive
parser.png.filter.error=Filter method: Unknown value
parser.png.interlace.0=Interlace: No
parser.png.interlace.1=Interlace: Yes, using Adam7
parser.png.interlace.error=Interlace: Unknown value

parser.png.idat=Decompressed IDAT chunk (PNG)

parser.gz=GZIP File (GZ)
parser.gz.cm=Compression method: Deflate
parser.gz.cm.error=Unknown compression method
parser.gz.flg.ftext.true=Contains ASCII text
parser.gz.flg.ftext.false=Content may be binary
parser.gz.flg.fhcrc.true=<span style="color: green">✓</span> With header CRC
parser.gz.flg.fhcrc.false=<span style="color: red">✗</span> Without header CRC
parser.gz.flg.fextra.true=<span style="color: green">✓</span> With an extra field
parser.gz.flg.fextra.false=<span style="color: red">✗</span> Without an extra field
parser.gz.flg.fname.true=<span style="color: green">✓</span> Known filename
parser.gz.flg.fname.false=<span style="color: red">✗</span> Unknown filename
parser.gz.flg.fcomment.true=<span style="color: green">✓</span> With a comment
parser.gz.flg.fcomment.false=<span style="color: red">✗</span> Without a comment
parser.gz.mtime.none=<span style="color: red">✗</span> No file modification time provided
parser.gz.isize=Original filesize: %d bytes (mod 2^32)

parser.ser=Java Serialized File (SER)
parser.ser.version=Serialization version %d
parser.ser.fieldname=Field name: '%s'

parser.asn1=Abstract Syntax Notation 1 (ASN1 BER/DER/CER)
parser.asn1.id.0=Universal %s identifier #%d
parser.asn1.id.0.named=Universal %s identifier #%d: %s
parser.asn1.id.1=Application %s identifier #%d
parser.asn1.id.2=Context-specific %s identifier #%d
parser.asn1.id.3=Private %s identifier #%d
parser.asn1.id.constructed.false=primitive
parser.asn1.id.constructed.true=constructed
parser.asn1.length=Length: %d bytes
parser.asn1.boolean.true=Boolean: True
parser.asn1.boolean.false=Boolean: False
parser.asn1.boolean.truthy=Boolean: Truthy (Invalid DER/CER)
parser.asn1.invalid=Invalid value for primitive
parser.asn1.integer=Integer: %d
parser.asn1.oid=Object Identifier: %s (%s)
parser.asn1.oid.unknown=Object Identifier: %s
parser.asn1.oid.java9=Please add `%s` to your `_JAVA_OPTIONS` environment variable,<br>or run SnowHex with `java %1$s -jar SnowHex.jar`
parser.asn1.oid.relative=Relative Object Identifier: %s
parser.asn1.oid.repository=Open in OID Repository

parser.elf=Executable and Linkable Format (ELF)
parser.elf.addrsize.error=Invalid Address Size
parser.elf.addrsize.1=32-bit addresses
parser.elf.addrsize.2=64-bit addresses
parser.elf.endianness.error=Invalid endianness
parser.elf.endianness.1=Little endian
parser.elf.endianness.2=Big endian
parser.elf.version=Format version %d
parser.elf.version.error=Invalid version number
parser.elf.osabi.unknown=Unknown ABI Version
parser.elf.osabi=OS ABI for %s
parser.elf.type.unknown=Unknown file type
parser.elf.type.0=Unknown file type
parser.elf.type.1=Relocatable file
parser.elf.type.2=Executable file
parser.elf.type.3=Shared object
parser.elf.type.4=Core file
parser.elf.machine=Machine type #%d
parser.elf.entry=Entry point memory address: %#x
parser.elf.phoff=Program header table offset: %#x
parser.elf.shoff=Section header table offset: %#x
parser.elf.phentsize=Size of a program header table entry: %d bytes
parser.elf.phnum=Number of entries in the program header table: %d
parser.elf.shentsize=Size of a section header table entry: %d bytes
parser.elf.shnum=Number of entries in the section header table: %d
parser.elf.shstrndx=Index of the section header table entry containing the section names: %d
parser.elf.p.type.error=Invalid program header table entry type
parser.elf.p.type.0=Null (Unused entry)
parser.elf.p.type.1=Loadable segment
parser.elf.p.type.2=Dynamic linking information
parser.elf.p.type.3=Interpreter information
parser.elf.p.type.4=Auxiliary information
parser.elf.p.type.5=Reserved (Shared library)
parser.elf.p.type.6=Program header
parser.elf.p.type.7=Thread-local storage template
parser.elf.p.offset=Offset of the segment in this file: %#x
parser.elf.p.vaddr=Virtual memory address of the segment: %#x
parser.elf.p.paddr=Physical memory address of the segment: %#x
parser.elf.p.filesz=Size of the segment in this file: %d bytes
parser.elf.p.memsz=Size of the segment in memory: %d bytes
parser.elf.align.none=No alignment needed
parser.elf.align=Alignment: %d bytes
parser.elf.s.type.0=Null (Unused entry)
parser.elf.s.type.1=Program data
parser.elf.s.type.2=Symbol table
parser.elf.s.type.3=String table
parser.elf.s.type.4=Relocation entries (with addends)
parser.elf.s.type.5=Symbol hash table
parser.elf.s.type.6=Dynamic linking info
parser.elf.s.type.7=Notes
parser.elf.s.type.8=Program space with no data (bss)
parser.elf.s.type.9=Relocation entries (without addends)
parser.elf.s.type.10=Reserved (Shared library)
parser.elf.s.type.11=Dynamic linker symbol table
parser.elf.s.type.14=Array of constructors
parser.elf.s.type.15=Array of destructors
parser.elf.s.type.16=Array of pre-constructors
parser.elf.s.type.17=Section group
parser.elf.s.type.18=Extended section indices
parser.elf.s.type.19=Number of defined types
parser.elf.s.type.error=Unknown section type
parser.elf.s.addr=Virtual memory address of the section: %#x
parser.elf.s.offset=Offset of the section in this file: %#x
parser.elf.s.size=Size of the section in this file: %d bytes
parser.elf.s.size=Size of each entry in the section: %d bytes
parser.elf.s.write=Writable
parser.elf.s.alloc=In memory at runtime
parser.elf.s.exec=Executable
parser.elf.s.merge=May be merged
parser.elf.s.strings=Contains null-terminated strings
parser.elf.s.infolink=Contains SHT index
parser.elf.s.linkorder=Preserve order after combining
parser.elf.s.nonconforming=Requires non-standard OS-specific handling
parser.elf.s.group=Section is member of a group
parser.elf.s.write=Section holds thread-local data
parser.elf.s.noflag=No flags (Default set)

parser.ant1=Antman type 1
parser.ant3=Antman type 3
parser.cor=Corewar Warrior
